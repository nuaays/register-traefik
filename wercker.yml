# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: golang
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongodb
    # http://devcenter.wercker.com/docs/services/mongodb.html
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace:
      package-dir: github.com/octoblu/register-traefik

    # Gets the dependencies
    - script:
        name: gpm
        code: |
          curl -s https://raw.githubusercontent.com/pote/gpm/v1.4.0/bin/gpm | bash

    # Build the project
    - script:
        name: go build
        code: |
          CGO_ENABLED=0 go build -a -ldflags '-s' -installsuffix cgo -o register-traefik .

    # Test the project
    - script:
        name: go test
        code: |
          go test ./...

    # Copy binary to a location that gets passed along to the deploy pipeline
    - script:
        name: copy binary
        code: cp register-traefik "$WERCKER_OUTPUT_DIR"

deploy:
  box: golang
  steps:
   # Use the scratch step to build a container from scratch based on the files present
  - script:
    name: discover tag
    code: |
      TAG="$(cd $WERCKER_SOURCE_DIR && git describe --tags --always)"
  - internal/docker-scratch-push:
      username: $QUAY_USERNAME
      password: $QUAY_PASSWORD
      cmd: ./register-traefik
      tag: $TAG
      repository: quay.io/octoblu/register-traefik
      registry: https://quay.io
